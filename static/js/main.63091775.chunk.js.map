{"version":3,"sources":["Movies.js","App.js","index.js"],"names":["Movies","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAgCeA,MA7Bf,YAA2D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC9C,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,aAAf,UACE,oBAAIA,UAAU,cAAd,SAA6BJ,IAC7B,oBAAII,UAAU,aAAd,SAA4BL,IAC5B,6BACGI,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBL,UAAU,eAA1B,SACGI,GADMC,QAKb,oBAAGL,UAAU,gBAAb,UAA8BH,EAAQS,MAAM,EAAG,KAA/C,gBC0HOC,G,kNAzGbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAOAC,IAAMC,IACd,4DARQ,gBAKEJ,EALF,EAIRK,KACEA,KAAQL,OAKZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAVzB,2C,uDAaZ,WACEQ,KAAKN,c,oBAGP,WAAU,IAAD,EACuBM,KAAKT,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,yBAASV,UAAU,YAAnB,SACGS,EACC,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,cAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGU,EAAOP,KAAI,SAACe,GAAD,OACV,cAAC,EAAD,CAEEC,GAAID,EAAMC,GACVxB,KAAMuB,EAAMvB,KACZC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfC,OAAQoB,EAAME,mBACdrB,OAAQmB,EAAMnB,QANTmB,EAAMC,e,GA/DTE,IAAMC,YCIxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.63091775.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Movies({ year, title, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <img src={poster} alt={title} title={title} />\r\n      <div className=\"movie_data\">\r\n        <h3 className=\"movie_title\">{title}</h3>\r\n        <h5 className=\"movie_year\">{year}</h5>\r\n        <ul>\r\n          {genres.map((genre, index) => (\r\n            <li key={index} className=\"genres_genre\">\r\n              {genre}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <p className=\"movie_summary\">{summary.slice(0, 200)}...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovies.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movies;\r\n","import React from \"react\";\n//import PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport Movie from \"./Movies\";\nimport \"./App.css\";\nclass App extends React.Component {\n  /* example for state\n  //App className get extended from React className component\n  state = {\n    count: 0,\n  };\n\n  //this is customized function\n  add = () => {\n    this.setState((current) => ({ count: current.count + 1 }));\n  };\n  minus = () => {\n    this.setState((current) => ({ count: current.count - 1 }));\n  };\n  //In actual, we gotta display repeatedly page with new state.\n  //react refreshes by calling render and shows with new state.\n  //Hence, use 'setState' that call automatically 'render' and etc.\n  //(Thus, we need to make iteration by for, while)\n  render() {\n    return (\n      <div>\n        <h1>The number is {this.state.count}</h1>\n        <button onClick={this.add}>Add</button>\n        <button onClick={this.minus}>Minus</button>\n      </div>\n    );\n  }\n  */\n\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n\n  getMovies = async () => {\n    //asynchronous function\n    //await till axios is done.\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    );\n    this.setState({ movies, isLoading: false });\n  };\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader_text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movie) => (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\n/*  ========== function component part ==================\nconst foodILike = [\n  {\n    id: 1,\n    name: \"Kimchi\",\n    image: \"https://t1.daumcdn.net/cfile/tistory/99D9CE4C5D310D5323\",\n    rating: 3.0,\n  },\n  {\n    id: 2,\n    name: \"Kimbab\",\n    image:\n      \"https://lh3.googleusercontent.com/proxy/WVYe4H9nRSS5OqXji483IFm76MaB-iwFw-OkD8X4ZXfjCPZAPW9l3dkTWBUEn3z8VlJNToTMrSOGnnfEkbyzrKUElc8zJC6TMVSaCyKCzfnaDNgPEV8yMxTIX5VlEjpRUDXvqp59ZBlSpIJdndKC0VkkmuUJ\",\n    rating: 5.0,\n  },\n];\n\nfunction Food({ name, picture, rating }) {\n  return (\n    <div>\n      <h2>I like {name}</h2>\n      <h4>{rating}/5.0</h4>\n      <img src={picture} alt={name} />\n    </div>\n  );\n}\n\nFood.propTypes = {\n  name: PropTypes.string.isRequired,\n  picture: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired,\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Hello~~~</h1>\n      <Food name=\"Tofu\" picture=\"None\" rating={1.0} />\n      {foodILike.map(function (element) {\n        return element.name + \"❤️\";\n      })}\n      {foodILike.map((dish) => (\n        <Food\n          key={dish.id}\n          name={dish.name}\n          picture={dish.image}\n          rating={dish.rating}\n        />\n      ))}\n    </div>\n  );\n}\n//map : iterator for each element.\n*/\n\nexport default App;\n\n//<Food fav=\"Kimchi\"/> : fav is property, argument\n//                     : Food is function\n//                     : return as HTML format\n\n/* VScode Commands\nselect all same name : ctrl + shift+ L\ncopy a line : Shift + Alt + ⬆️ or ⬇️\nmove a line : Alt + ⬆️ or ⬇️\ndelete a line : Ctrl + Shift + K\nchange to Uppercase : select range & Ctrl + Shift + P (Palette)\n                      search 'Transform to Uppercase'\n*/\n\n//Module not found:\n// just do 'npm i' //wow, automatically installed\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n//Virtual DOM\n//<App /> is component that is function.\n//<    /> is for html (called JSX: JS + HTML linking)\n//render only one component.\n//Hence, import other files in App.js\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}